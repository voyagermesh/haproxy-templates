frontend {{ .FrontendName }}
	{{ if .OffloadSSL -}}
	bind *:{{ .Port }} {{ if .AcceptProxy }}accept-proxy{{ end }} ssl no-sslv3 no-tlsv10 no-tls-tickets crt /etc/ssl/private/haproxy/ alpn http/1.1
	# Mark all cookies as secure
	rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1;\ Secure
	# Add the HSTS header with a 6 month default max-age
	rspadd  Strict-Transport-Security:\ max-age={{ .HSTSMaxAge }}
	{{ else -}}
	bind *:{{ .Port }} {{ if .AcceptProxy }}accept-proxy{{ end }}
	{{ end }}
	mode http
	{{- range $rule := .FrontendRules }}
	{{ $rule -}}
	{{ else }}
	option httplog
	option forwardfor
	{{ end }}

	{{- if .Auth }}
	{{- range $name, $users := .Auth.Users }}
	acl __auth_ok__  http_auth({{ $name -}})
	{{ end -}}
	http-request auth {{ if ne $.Auth.Realm "" }}realm "{{ $.Auth.Realm }}" {{ end }}if !__auth_ok__
	{{ end }}

	{{- if .ProxyBodySize -}}
	http-request deny deny_status 400 if { req.body_size gt {{ .ProxyBodySize }} }
	{{ end }}

	{{- if .EnableCORS -}}
	capture request header origin len 128
	http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
	rspadd Access-Control-Allow-Methods:\ GET,\ HEAD,\ OPTIONS,\ POST,\ PUT  if { capture.req.hdr(0) -m found }
	rspadd Access-Control-Allow-Credentials:\ true  if { capture.req.hdr(0) -m found }
	rspadd Access-Control-Allow-Headers:\ Origin,\ Accept,\ X-Requested-With,\ Content-Type,\ Access-Control-Request-Method,\ Access-Control-Request-Headers,\ Authorization  if { capture.req.hdr(0) -m found }
	{{ end }}


	{{- range $path := .Paths }}
	{{ if  and (or (eq $.Port 80) (eq $.Port 443)) (not $.NodePort) }}
	{{ if $path.Host }}acl host_acl_{{ $path.Backend.Name }} {{ $path.Host | host_name }}{{ end }}
	{{- end }}
	{{ if $path.Host }}acl host_acl_{{ $path.Backend.Name }} {{ $path.Host | host_name }}{{ if $.NodePort }}:{{ $.NodePort }}{{ else }}:{{ $.Port }}{{ end }}{{ end }}
	{{ if $path.Path }}acl url_acl_{{ $path.Backend.Name }} path_beg {{ $path.Path }}{{ end }}
	use_backend {{ $path.Backend.Name }} {{ if or $path.Host $path.Path }}if {{ end }}{{ if $path.Host }}host_acl_{{ $path.Backend.Name }}{{ end }}{{ if $path.Path }} url_acl_{{ $path.Backend.Name }}{{ end -}}
	{{ end }}
	{{ if .DefaultBackend }}
	default_backend {{ .DefaultBackend.Name }}
	{{ end -}}

